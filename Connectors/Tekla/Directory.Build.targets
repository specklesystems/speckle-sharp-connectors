<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Target AfterTargets="Build" Name="AfterBuildTekla" Condition="'$(TeklaVersion)' != '' And '$(ContinuousIntegrationBuild)' != 'true'">
    <ItemGroup>
      <TeklaDlls Include="$(TargetDir)\**\*.*" Exclude="$(TargetDir)*.bmp" />
      <TeklaBmp Include="$(TargetDir)\Resources\et_element_Speckle.bmp"/>
      <TeklaSvg Include="$(TargetDir)\Resources\speckle.svg"/>
      <TeklaRibbonXml Include="$(TargetDir)\Resources\Speckle-Ribbon.xml"/>
    </ItemGroup>
    <Message Text="Tekla Version $(TeklaVersion)" Importance="high"/>

    <!-- Define installation paths -->
    <PropertyGroup>
      <ProgramDataTeklaPath>$(ProgramData)\Trimble\Tekla Structures\$(TeklaVersion).0</ProgramDataTeklaPath>
      <DirectTeklaPath>C:\TeklaStructures\$(TeklaVersion).0</DirectTeklaPath>

      <!-- Define extension and ribbon paths -->
      <ProgramDataRibbonPath>$(ProgramDataTeklaPath)\Environments\common\system\Ribbons\CustomTabs\Modeling</ProgramDataRibbonPath>
      <DirectRibbonPath>$(DirectTeklaPath)\Environments\common\system\Ribbons\CustomTabs\Modeling</DirectRibbonPath>

      <SpeckleExtensionPath Condition="Exists('$(ProgramDataTeklaPath)')">$(ProgramDataTeklaPath)\Environments\common\extensions\Speckle3TeklaStructures</SpeckleExtensionPath>
      <SpeckleExtensionPath Condition="Exists('$(DirectTeklaPath)')">$(DirectTeklaPath)\Environments\common\extensions\Speckle3TeklaStructures</SpeckleExtensionPath>
    </PropertyGroup>

    <!-- Delete win-arm64 folder if it exists in the active installation path -->
    <RemoveDir
      Condition="Exists('$(SpeckleExtensionPath)\runtimes\win-arm64\native')"
      Directories="$(SpeckleExtensionPath)\runtimes\win-arm64\native" />

    <!-- Check which installation path exists for the specific version -->
    <PropertyGroup>
      <TeklaInstallPath Condition="Exists('$(ProgramDataTeklaPath)')">$(ProgramDataTeklaPath)</TeklaInstallPath>
      <TeklaInstallPath Condition="Exists('$(DirectTeklaPath)')">$(DirectTeklaPath)</TeklaInstallPath>

      <!-- Set the correct ribbon path based on installation -->
      <RibbonInstallPath Condition="Exists('$(ProgramDataTeklaPath)')">$(ProgramDataRibbonPath)</RibbonInstallPath>
      <RibbonInstallPath Condition="Exists('$(DirectTeklaPath)')">$(DirectRibbonPath)</RibbonInstallPath>
    </PropertyGroup>

    <!-- Copy DLLs to extension folder -->
    <Copy
      Condition="'$(SpeckleExtensionPath)' != ''"
      DestinationFolder="$(SpeckleExtensionPath)\%(RecursiveDir)"
      SourceFiles="@(TeklaDlls)" />

    <!-- Copy SVG to Resources folder -->
    <Copy
      Condition="'$(SpeckleExtensionPath)' != ''"
      DestinationFolder="$(SpeckleExtensionPath)\Resources"
      SourceFiles="@(TeklaSvg)" />

    <!-- Copy BMP to Bitmaps folder -->
    <Copy
      Condition="'$(TeklaInstallPath)' != ''"
      DestinationFolder="$(TeklaInstallPath)\Bitmaps"
      SourceFiles="@(TeklaBmp)" />

    <!-- Create Ribbon directory if it doesn't exist -->
    <MakeDir Directories="$(RibbonInstallPath)"
             Condition="'$(RibbonInstallPath)' != '' And !Exists('$(RibbonInstallPath)')" />

    <!-- Copy the XML file to destination -->
    <Copy
      SourceFiles="@(TeklaRibbonXml)"
      DestinationFolder="$(RibbonInstallPath)"
      Condition="'$(RibbonInstallPath)' != ''" />

    <!-- Read the copied file -->
    <ReadLinesFromFile
      File="$(RibbonInstallPath)\Speckle-Ribbon.xml"
      Condition="'$(RibbonInstallPath)' != ''">
      <Output TaskParameter="Lines" ItemName="XmlContent"/>
    </ReadLinesFromFile>

    <!-- Update XML content with correct icon path -->
    <PropertyGroup>
      <UpdatedXmlContent>@(XmlContent->'%(Identity)'->Replace('Icon=""', 'Icon="$(SpeckleExtensionPath)\Resources\speckle.svg"'))</UpdatedXmlContent>
    </PropertyGroup>

    <!-- Write back the updated content -->
    <WriteLinesToFile
      File="$(RibbonInstallPath)\Speckle-Ribbon.xml"
      Lines="$(UpdatedXmlContent)"
      Overwrite="true"
      Condition="'$(RibbonInstallPath)' != ''" />

  </Target>
</Project>
